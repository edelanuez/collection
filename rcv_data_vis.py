# -*- coding: utf-8 -*-
"""rcv data vis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jd0_I1eygFErxxQS_3nzUpMuDufl8A6a
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

"""## Jeanne Clelland's viz for MN2013:"""

rcv = pd.read_csv("selected ranked choice CVRs - MN2013.csv")
print(rcv)

hodgesnonea = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"]=="BETSY HODGES") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"]!="MARK ANDREW")]
hodgesnone = hodgesnonea[hodgesnonea["2ND CHOICE MAYOR MINNEAPOLIS"] != "DON SAMUELS"]
hodgesnone.count()

hodgesandrew = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"]=="BETSY HODGES") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"]=="MARK ANDREW")]
hodgesandrew.count()

hodgessamuels = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"]=="BETSY HODGES") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"]=="DON SAMUELS")]
hodgessamuels.count()

samuelsnonea = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"]=="DON SAMUELS") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"] != "BETSY HODGES")]
samuelsnone = samuelsnonea[samuelsnonea["2ND CHOICE MAYOR MINNEAPOLIS"]!= "MARK ANDREW"]
samuelsnone.count()

samuelshodges = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"] == "DON SAMUELS") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"]=="BETSY HODGES")]
samuelshodges.count()

samuelsandrew = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"] == "DON SAMUELS") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"]=="MARK ANDREW")]
samuelsandrew.count()

andrewnonea = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"]=="MARK ANDREW") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"] != "BETSY HODGES")]
andrewnone = andrewnonea[andrewnonea["2ND CHOICE MAYOR MINNEAPOLIS"]!= "DON SAMUELS"]
andrewnone.count()

andrewhodges = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"] == "MARK ANDREW") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"]=="BETSY HODGES")]
andrewhodges.count()

andrewsamuels = rcv[(rcv["1ST CHOICE MAYOR MINNEAPOLIS"] == "MARK ANDREW") & (rcv["2ND CHOICE MAYOR MINNEAPOLIS"]=="DON SAMUELS")]
andrewsamuels.count()

hodges = pd.concat((hodgesnone["1ST CHOICE MAYOR MINNEAPOLIS"],hodgesandrew["2ND CHOICE MAYOR MINNEAPOLIS"],hodgessamuels["2ND CHOICE MAYOR MINNEAPOLIS"]))
samuels = pd.concat((samuelsnone["1ST CHOICE MAYOR MINNEAPOLIS"],samuelsandrew["2ND CHOICE MAYOR MINNEAPOLIS"],samuelshodges["2ND CHOICE MAYOR MINNEAPOLIS"]))
andrew = pd.concat((andrewnone["1ST CHOICE MAYOR MINNEAPOLIS"],andrewhodges["2ND CHOICE MAYOR MINNEAPOLIS"],andrewsamuels["2ND CHOICE MAYOR MINNEAPOLIS"]))

plt.hist(hodges)

plt.hist(samuels)

plt.hist(andrew)

hodges

hodges_colors = ["blue","skyblue","skyblue"]
andrew_colors = ["lime","green","lime"]
samuels_colors = ["pink","pink","red"]
# plt.hist([hodges,andrew,samuels], color=[hodges_colors,andrew_colors,samuels_colors])
# plt.hist([hodges,andrew,samuels], color=[[0.9,0.0,0.0],[0.1,0.9,0.1],[0.1,0.5,0.9]])
plt.hist([hodges,andrew,samuels], color=["red","green","blue"])

plt.hist(hodges,color=[hodges_colors])

plt.hist(andrew, color=[andrew_colors])

plt.hist(samuels,color=[samuels_colors])



plt.hist([hodges,andrew,samuels],histtype="bar",color=[hodges_colors,andrew_colors,samuels_colors])

"""## Accumulation Chart"""

rounds = ['Round 1', 'Round 2', 'Round 3']
candidates = ['Hodges', 'Andrew', 'Samuels']
vote_counts = np.array([
    [11405, 11405+3346, 11405+3346+6970],
    [9734, 9734+1424, 0],
    [3565, 0, 0]
])

accumulated_votes = np.cumsum(vote_counts, axis=1)

# Create the accumulation chart
plt.figure()
bar_width = 0.4
colors = ['red', 'green', 'blue']

for i in range(len(rounds)):
    plt.barh(candidates, accumulated_votes[:, i], height=bar_width,
             color=colors[i], alpha=0.8, label=rounds[i],align="edge")

plt.xlabel('Accumulated Votes')
plt.ylabel('Candidates')
plt.title('Accumulation Chart for Instant-Runoff Election')
plt.legend()
plt.tight_layout()
plt.show()

"""## Sankey Diagram"""